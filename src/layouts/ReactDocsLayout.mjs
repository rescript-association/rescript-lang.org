// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Url from "../common/Url.mjs";
import * as Next from "../bindings/Next.mjs";
import * as React from "react";
import * as Markdown from "../components/Markdown.mjs";
import * as Constants from "../common/Constants.mjs";
import * as DocsLayout from "./DocsLayout.mjs";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

var tocData = (require('index_data/react_latest_toc.json'));

var LatestLayout = DocsLayout.Make({
      tocData: tocData
    });

var tocData$1 = (require('index_data/react_v0100_toc.json'));

var V0100Layout = DocsLayout.Make({
      tocData: tocData$1
    });

function ReactDocsLayout$Latest(Props) {
  var frontmatter = Props.frontmatter;
  var componentsOpt = Props.components;
  var children = Props.children;
  var components = componentsOpt !== undefined ? Caml_option.valFromOption(componentsOpt) : Markdown.$$default;
  var router = Next.Router.useRouter(undefined);
  var route = router.route;
  var url = Url.parse(route);
  var version = url.version;
  var version$1 = typeof version === "number" ? "latest" : version._0;
  var breadcrumbs_0 = {
    name: "Docs",
    href: "/docs/latest"
  };
  var breadcrumbs_1 = {
    hd: {
      name: "rescript-react",
      href: "/docs/react/" + (version$1 + "/introduction")
    },
    tl: /* [] */0
  };
  var breadcrumbs = {
    hd: breadcrumbs_0,
    tl: breadcrumbs_1
  };
  var tmp = {
    breadcrumbs: breadcrumbs,
    title: "rescript-react",
    metaTitleCategory: "React",
    version: "latest",
    availableVersions: Constants.allReactVersions,
    components: components,
    theme: "Reason",
    children: children
  };
  if (frontmatter !== undefined) {
    tmp.frontmatter = Caml_option.valFromOption(frontmatter);
  }
  return React.createElement(LatestLayout.make, tmp);
}

var Latest = {
  make: ReactDocsLayout$Latest
};

function ReactDocsLayout$V0100(Props) {
  var frontmatter = Props.frontmatter;
  var componentsOpt = Props.components;
  var children = Props.children;
  var components = componentsOpt !== undefined ? Caml_option.valFromOption(componentsOpt) : Markdown.$$default;
  var router = Next.Router.useRouter(undefined);
  var route = router.route;
  var url = Url.parse(route);
  var version = url.version;
  var version$1 = typeof version === "number" ? "latest" : version._0;
  var breadcrumbs_0 = {
    name: "Docs",
    href: "/docs/latest"
  };
  var breadcrumbs_1 = {
    hd: {
      name: "rescript-react",
      href: "/docs/react/" + (version$1 + "/introduction")
    },
    tl: /* [] */0
  };
  var breadcrumbs = {
    hd: breadcrumbs_0,
    tl: breadcrumbs_1
  };
  var tmp = {
    breadcrumbs: breadcrumbs,
    title: "rescript-react",
    metaTitleCategory: "React",
    version: version$1,
    availableVersions: Constants.allReactVersions,
    components: components,
    theme: "Reason",
    children: children
  };
  if (frontmatter !== undefined) {
    tmp.frontmatter = Caml_option.valFromOption(frontmatter);
  }
  return React.createElement(V0100Layout.make, tmp);
}

var V0100 = {
  make: ReactDocsLayout$V0100
};

var Link;

var NavItem;

var Category;

var Toc;

export {
  Link ,
  NavItem ,
  Category ,
  Toc ,
  LatestLayout ,
  V0100Layout ,
  Latest ,
  V0100 ,
}
/* LatestLayout Not a pure module */

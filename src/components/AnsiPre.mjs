// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Ansi from "../common/Ansi.mjs";
import * as React from "react";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

function mapColor(target, c) {
  if (target) {
    switch (c) {
      case /* Black */0 :
          return "bg-gray-100";
      case /* Red */1 :
          return "bg-fire";
      case /* Green */2 :
          return "bg-turtle-dark";
      case /* Yellow */3 :
          return "bg-orange-dark";
      case /* Magenta */5 :
          return "bg-berry";
      case /* Blue */4 :
      case /* Cyan */6 :
          return "bg-water-dark";
      case /* White */7 :
          return "bg-gray-10";
      
    }
  } else {
    switch (c) {
      case /* Black */0 :
          return "text-gray-100";
      case /* Red */1 :
          return "text-fire-70";
      case /* Green */2 :
          return "text-turtle-dark";
      case /* Yellow */3 :
          return "text-orange-dark";
      case /* Magenta */5 :
          return "text-berry";
      case /* Blue */4 :
      case /* Cyan */6 :
          return "text-water-dark";
      case /* White */7 :
          return "text-gray-10";
      
    }
  }
}

function AnsiPre(Props) {
  var className = Props.className;
  var children = Props.children;
  var spans = Belt_Array.mapWithIndex(Ansi.SgrString.fromTokens(Ansi.parse(children)), (function (i, str) {
          var key = String(i);
          var className = str.params.map(function (p) {
                  if (typeof p === "number") {
                    return "bold";
                  }
                  switch (p.TAG | 0) {
                    case /* Fg */0 :
                        return mapColor(/* Fg */0, p._0);
                    case /* Bg */1 :
                        return mapColor(/* Bg */1, p._0);
                    case /* Unknown */2 :
                        return "";
                    
                  }
                }).join(" ");
          return React.createElement("span", {
                      key: key,
                      className: className
                    }, str.content);
        }));
  var tmp = {};
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("pre", tmp, spans);
}

var make = AnsiPre;

export {
  make ,
  
}
/* react Not a pure module */

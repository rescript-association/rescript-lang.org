// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Blog from "./Blog.mjs";
import * as Icon from "./components/Icon.mjs";
import * as Meta from "./components/Meta.mjs";
import * as Next from "./bindings/Next.mjs";
import * as Util from "./common/Util.mjs";
import * as React from "react";
import * as BlogApi from "./common/BlogApi.mjs";
import * as DateStr from "./common/DateStr.mjs";
import * as Markdown from "./components/Markdown.mjs";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as MainLayout from "./layouts/MainLayout.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as BlogFrontmatter from "./common/BlogFrontmatter.mjs";

var middleDotSpacer = " " + (String.fromCharCode(183) + " ");

var Params = {};

var frontmatter = (function(component) {
        if(typeof component.frontmatter === "object") { return component.frontmatter; }
        return {};
      });

function BlogArticle$Line(Props) {
  return React.createElement("div", {
              className: "block border-t border-gray-20"
            });
}

function BlogArticle$AuthorBox(Props) {
  var author = Props.author;
  var authorImg = React.createElement("img", {
        className: "h-full w-full rounded-full",
        src: author.imgUrl
      });
  return React.createElement("div", {
              className: "flex items-center"
            }, React.createElement("div", {
                  className: "w-10 h-10 bg-berry-40 block rounded-full mr-3"
                }, authorImg), React.createElement("div", {
                  className: "body-sm"
                }, React.createElement("a", {
                      className: "hover:text-gray-80",
                      href: "https://twitter.com/" + author.twitter,
                      rel: "noopener noreferrer",
                      target: "_blank"
                    }, author.fullname), React.createElement("div", {
                      className: "text-gray-60"
                    }, author.role)));
}

function BlogArticle$BlogHeader(Props) {
  var date = Props.date;
  var author = Props.author;
  var co_authors = Props.co_authors;
  var title = Props.title;
  var category = Props.category;
  var description = Props.description;
  var articleImg = Props.articleImg;
  var date$1 = DateStr.toDate(date);
  var authors = Belt_Array.concat([author], co_authors);
  return React.createElement("div", {
              className: "flex flex-col items-center"
            }, React.createElement("div", {
                  className: "w-full max-w-740"
                }, React.createElement("div", {
                      className: "text-gray-60 body-sm mb-5"
                    }, category !== undefined ? React.createElement(React.Fragment, undefined, category, middleDotSpacer) : null, Util.$$Date.toDayMonthYear(date$1)), React.createElement("h1", {
                      className: "hl-title"
                    }, title), Belt_Option.mapWithDefault(description, null, (function (desc) {
                        if (desc === "") {
                          return React.createElement("div", {
                                      className: "mb-8"
                                    });
                        } else {
                          return React.createElement("div", {
                                      className: "text-gray-80 mt-1 mb-8"
                                    }, React.createElement("p", {
                                          className: "body-lg"
                                        }, desc));
                        }
                      })), React.createElement("div", {
                      className: "flex flex-col md:flex-row mb-12"
                    }, Belt_Array.map(authors, (function (author) {
                            return React.createElement("div", {
                                        key: author.username,
                                        className: "mt-4 md:mt-0 md:ml-8 first:ml-0",
                                        style: {
                                          minWidth: "8.1875rem"
                                        }
                                      }, React.createElement(BlogArticle$AuthorBox, {
                                            author: author
                                          }));
                          })))), articleImg !== undefined ? React.createElement("div", {
                    className: "-mx-8 sm:mx-0 sm:w-full bg-gray-5-tr md:mt-24"
                  }, React.createElement("img", {
                        className: "h-full w-full object-cover",
                        style: {
                          maxHeight: "33.625rem"
                        },
                        src: articleImg
                      })) : React.createElement("div", {
                    className: "max-w-740 w-full"
                  }, React.createElement(BlogArticle$Line, {})));
}

function $$default(props) {
  var path = props.path;
  var module_ = require("../_blogposts/" + path);
  var archived = path.startsWith("archive/");
  var component = module_.default;
  var fm = BlogFrontmatter.decode(frontmatter(component));
  var children = React.createElement(component, {});
  var archivedNote = archived ? React.createElement("div", {
          className: "mb-10"
        }, React.createElement(Markdown.Warn.make, {
              children: React.createElement(Markdown.P.make, {
                    children: null
                  }, React.createElement("span", {
                        className: "font-bold"
                      }, "Important: "), "This is an archived blog post, kept for historical reasons. Please note that this information might be outdated.")
            })) : null;
  var content;
  if (fm.TAG === /* Ok */0) {
    var match = fm._0;
    var description = match.description;
    var title = match.title;
    var tmp = {
      siteName: "ReScript Blog",
      title: title + " | ReScript Blog",
      ogImage: Belt_Option.getWithDefault(Caml_option.null_to_opt(match.previewImg), Blog.defaultPreviewImg)
    };
    var tmp$1 = description === null ? undefined : Caml_option.some(description);
    if (tmp$1 !== undefined) {
      tmp.description = tmp$1;
    }
    content = React.createElement("div", {
          className: "w-full"
        }, React.createElement(Meta.make, tmp), React.createElement("div", {
              className: "mb-10 md:mb-20"
            }, React.createElement(BlogArticle$BlogHeader, {
                  date: match.date,
                  author: match.author,
                  co_authors: match.co_authors,
                  title: title,
                  description: description === null ? undefined : Caml_option.some(description),
                  articleImg: Caml_option.null_to_opt(match.articleImg)
                })), React.createElement("div", {
              className: "flex justify-center"
            }, React.createElement("div", {
                  className: "max-w-740 w-full"
                }, archivedNote, children, React.createElement("div", {
                      className: "mt-12"
                    }, React.createElement(BlogArticle$Line, {}), React.createElement("div", {
                          className: "pt-20 flex flex-col items-center"
                        }, React.createElement("div", {
                              className: "text-24 sm:text-32 text-center text-gray-80 font-medium"
                            }, "Want to read more?"), React.createElement(Next.Link.make, {
                              href: "/blog",
                              children: React.createElement("a", {
                                    className: "text-fire hover:text-fire-70"
                                  }, "Back to Overview", React.createElement(Icon.ArrowRight.make, {
                                        className: "ml-2 inline-block"
                                      }))
                            }))))));
  } else {
    content = React.createElement("div", undefined, React.createElement(Markdown.Warn.make, {
              children: null
            }, React.createElement("h2", {
                  className: "font-bold text-gray-80 text-24 mb-2"
                }, "Could not parse file '_blogposts/" + (path + ".mdx'")), React.createElement("p", undefined, "The content of this blog post will be displayed as soon as all\n            required frontmatter data has been added."), React.createElement("p", {
                  className: "font-bold mt-4"
                }, "Errors:"), fm._0));
  }
  return React.createElement(MainLayout.make, {
              children: content
            });
}

function getStaticProps(ctx) {
  var params = ctx.params;
  var match = BlogApi.getAllPosts(undefined).find(function (param) {
        return BlogApi.blogPathToSlug(param.path) === params.slug;
      });
  var path = match !== undefined ? match.path : params.slug;
  var props = {
    path: path
  };
  return Promise.resolve({
              props: props
            });
}

function getStaticPaths(param) {
  var paths = Belt_Array.map(BlogApi.getAllPosts(undefined), (function (postData) {
          return {
                  params: {
                    slug: BlogApi.blogPathToSlug(postData.path)
                  }
                };
        }));
  return Promise.resolve({
              paths: paths,
              fallback: false
            });
}

export {
  Params ,
  $$default ,
  $$default as default,
  getStaticProps ,
  getStaticPaths ,
  
}
/* middleDotSpacer Not a pure module */

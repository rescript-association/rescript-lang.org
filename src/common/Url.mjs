// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Util from "./Util.mjs";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Caml_array from "rescript/lib/es6/caml_array.js";

function prettyString(str) {
  return Util.$$String.capitalize(Util.$$String.camelCase(str));
}

function parse(route) {
  var fullpath = Belt_Array.keep(route.split("/"), (function (s) {
          return s !== "";
        }));
  var foundVersionIndex = fullpath.findIndex(function (chunk) {
        return /latest|v\d+(\.\d+)?(\.\d+)?/.test(chunk);
      });
  var match;
  if (foundVersionIndex === -1) {
    match = [
      /* NoVersion */1,
      fullpath,
      []
    ];
  } else {
    var v = Caml_array.get(fullpath, foundVersionIndex);
    var version = v === "latest" ? /* Latest */0 : ({
          _0: v,
          [Symbol.for("name")]: "Version"
        });
    match = [
      version,
      fullpath.slice(0, foundVersionIndex),
      fullpath.slice(foundVersionIndex + 1 | 0, fullpath.length)
    ];
  }
  return {
          fullpath: fullpath,
          base: match[1],
          version: match[0],
          pagepath: match[2]
        };
}

export {
  parse ,
  prettyString ,
  
}
/* No side effect */

// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as React from "@mdx-js/react";

var getMdxType = (element => {
      if(element == null || element.props == null) {
        return 'unknown';
      }
      return element.props.mdxType;
    });

var getMdxClassName = (element => {
      if(element == null || element.props == null) {
        return;
      }
      return element.props.className;
    });

function classify(v) {
  if ((function (a) { return  a instanceof Array})(v)) {
    return {
            TAG: 2,
            _0: v,
            [Symbol.for("name")]: "Array"
          };
  } else if (typeof v === "string") {
    return {
            TAG: 0,
            _0: v,
            [Symbol.for("name")]: "String"
          };
  } else if (typeof v === "object") {
    return {
            TAG: 1,
            _0: v,
            [Symbol.for("name")]: "Element"
          };
  } else {
    return {
            TAG: 3,
            _0: v,
            [Symbol.for("name")]: "Unknown"
          };
  }
}

var getMdxChildren = (element => {
      if(typeof element === 'string') {
        return element;
      }
      if(element == null || element.props == null || element.props.children == null) {
        return;
      }
      return element.props.children;
    });

function arrToReactElement(prim) {
  return prim;
}

function fromReactElement(prim) {
  return prim;
}

function MdxChildren_toReactElement(prim) {
  return prim;
}

var MdxChildren = {
  classify: classify,
  getMdxChildren: getMdxChildren,
  toReactElement: MdxChildren_toReactElement
};

var Components = {
  t: (function (prim0, prim1, prim2, prim3, prim4, prim5, prim6, prim7, prim8, prim9, prim10, prim11, prim12, prim13, prim14, prim15, prim16, prim17, prim18, prim19, prim20, prim21, prim22, prim23, prim24, prim25, prim26) {
      var tmp = {};
      if (prim0 !== undefined) {
        tmp.Cite = Caml_option.valFromOption(prim0);
      }
      if (prim1 !== undefined) {
        tmp.Info = Caml_option.valFromOption(prim1);
      }
      if (prim2 !== undefined) {
        tmp.Warn = Caml_option.valFromOption(prim2);
      }
      if (prim3 !== undefined) {
        tmp.Intro = Caml_option.valFromOption(prim3);
      }
      if (prim4 !== undefined) {
        tmp.UrlBox = Caml_option.valFromOption(prim4);
      }
      if (prim5 !== undefined) {
        tmp.CodeTab = Caml_option.valFromOption(prim5);
      }
      if (prim6 !== undefined) {
        tmp.p = Caml_option.valFromOption(prim6);
      }
      if (prim7 !== undefined) {
        tmp.li = Caml_option.valFromOption(prim7);
      }
      if (prim8 !== undefined) {
        tmp.h1 = Caml_option.valFromOption(prim8);
      }
      if (prim9 !== undefined) {
        tmp.h2 = Caml_option.valFromOption(prim9);
      }
      if (prim10 !== undefined) {
        tmp.h3 = Caml_option.valFromOption(prim10);
      }
      if (prim11 !== undefined) {
        tmp.h4 = Caml_option.valFromOption(prim11);
      }
      if (prim12 !== undefined) {
        tmp.h5 = Caml_option.valFromOption(prim12);
      }
      if (prim13 !== undefined) {
        tmp.ul = Caml_option.valFromOption(prim13);
      }
      if (prim14 !== undefined) {
        tmp.ol = Caml_option.valFromOption(prim14);
      }
      if (prim15 !== undefined) {
        tmp.table = Caml_option.valFromOption(prim15);
      }
      if (prim16 !== undefined) {
        tmp.thead = Caml_option.valFromOption(prim16);
      }
      if (prim17 !== undefined) {
        tmp.th = Caml_option.valFromOption(prim17);
      }
      if (prim18 !== undefined) {
        tmp.td = Caml_option.valFromOption(prim18);
      }
      if (prim19 !== undefined) {
        tmp.blockquote = Caml_option.valFromOption(prim19);
      }
      if (prim20 !== undefined) {
        tmp.inlineCode = Caml_option.valFromOption(prim20);
      }
      if (prim21 !== undefined) {
        tmp.strong = Caml_option.valFromOption(prim21);
      }
      if (prim22 !== undefined) {
        tmp.hr = Caml_option.valFromOption(prim22);
      }
      if (prim23 !== undefined) {
        tmp.code = Caml_option.valFromOption(prim23);
      }
      if (prim24 !== undefined) {
        tmp.pre = Caml_option.valFromOption(prim24);
      }
      if (prim25 !== undefined) {
        tmp.a = Caml_option.valFromOption(prim25);
      }
      return tmp;
    })
};

var Provider = {
  make: React.MDXProvider
};

export {
  arrToReactElement ,
  getMdxType ,
  getMdxClassName ,
  fromReactElement ,
  MdxChildren ,
  Components ,
  Provider ,
  
}
/* Provider Not a pure module */
